Epi 2 =>

1. NPM is a package manager but not stands as node package manager
2. It has all the packages hoisted to use.
3. package.json is a configuration for NPM

* Webpack, parcel, beet are bundles which bundles/packages and minifies the code for production
* there are 2 types of dependencies one is dev dependency(-D) and the other one is normal which uses in production. 

* ^ carel icon in json files(ex "^2.8.0") means if any minor version update happend then the version in file also will be updated 
* ~ tilde icon in json files(ex "^2.8.0") means if any major version update happend then the version in file also will be updated automatically but this is not much suitable because it ca break thing
* package-lock-json is very important file, for example if in some case package.json's version got updated, so lock file keeps a track of it original versions. it keeps exact version of all the dependencies

* node modules - it contains all the dependencies called transative dependency. for example parcel install so parcel also will have dependencies. thats why node modules folder is heavy

* If we have package.json and package-lock-json file then node_module can be regenerated, and no need to push node_module in remote because it is heavy too and no use of it there.

* NPM command is for installing something, for example, npm install you r installing a package. and with npx means u r executing that package.
* cdn links are not good way to import react in the app as version can be changed, and we will have to do network call everytime,
* type="module"
* npx parcel build index.html for prod build

* #parcel
- it creates dev build
- local setup
- HMR - hot module replacement, it reads file
- it uses file watching algorithem
- it gives faster developemet and builds experience by caching
- image optimization
- it does minification, compression, for prod build
- consistent hashing
- code splitting
- differential bundling

read about parcel.org


Episode - 3

* npm run start/npm start is a same thing as behind the scene it executes npx parcel index.html command
* JSX is not an html or javascript it singly JSX which can be say a look-alike html
* JSX code does not directly understand by JS engine or browser. 1st it is complied by Parcel (parcel will take help of library called Babel) babel will transpile/converts code into the form which js engine or browser understands.
* read about babel documentation
* JSX (transpiled before it reaches the JS) - PARCEL - Babel
* JSX => Babel transpiles it to React.createElement => React.createElement-JS Object =>HTMLElement(render)
* Ascembeling two or more components together called components composition

Episode 4 

* passing a prop to a function is same as passing argument to the function
* when u have to dynamically passin the data to the component, u passin as a prop
* config driven UI, - our website is driven by website, or data, for example different cities shows differet datas(system design interview ques)
* what is optional chaining?

Episode 5-

* if u have single const to export then you can use, export default <name of the component> but if u have many const to export then in this case we need to use named export for example
export const abc = 'some url';
export const abc = 'some url';
Named export need to be imported under {} but in case of default export it can be imported normally

two types of export imports
 export deafult Component;
 import Component from "path";

 export const Component;
 import {Component} from "path";

 * why react is fast? - because it easily do dom maniplulation, effeciet dom maniplulation

 React Hooks-
 * react hook eod is js normal utility function, that function comes with may superpowers, logics

 * React used Reconciliation algorithem (also known as React fiber)
* virtual dom is representation of actual dom


actual dom
<div>
<img /> 
</div>


react element are virtual dom